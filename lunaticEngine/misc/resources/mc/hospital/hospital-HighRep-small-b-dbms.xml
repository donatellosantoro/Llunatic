<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE doc [
<!ENTITY SIZE "small_b">
<!ENTITY dependencies SYSTEM "dependencies.xml">
]>
<scenario>
  <source>
    <type>DBMS</type>
    <access-configuration>
      <driver>org.postgresql.Driver</driver>
      <uri>jdbc:postgresql:bart_hospital_&SIZE;</uri>
      <schema>source</schema>
      <login>pguser</login>
      <password>pguser</password>
    </access-configuration>
  </source>
  <target>
    <type>DBMS</type>
    <access-configuration>
      <driver>org.postgresql.Driver</driver>
      <uri>jdbc:postgresql:bart_hospital_&SIZE;</uri>
      <schema>target_dirty_high</schema>
      <login>pguser</login>
      <password>pguser</password>
    </access-configuration>
    <import>
      <input type="csv" separator="," table="hospital">dirty_hospital_&SIZE;.csv</input>
    </import>
  </target>
  <dependencies>
<![CDATA[
ExtEGDs:
////fd_8:state,measure code->stateavg
//e8:  hospital(providernumber: $pn1, hospitalname: $hn1, address1: $a11, city: $c1, state: $s1, zip: $z1, country: $co1, phone: $p1, hospitaltype: $ht1, hospitalowner: $ho1, emergencyservice: $es1, condition: $cn1, measurecode: $mc1, measurename: $mn1, score: $sc1, sample: $sa1, stateavg: $avg1),
//     hospital(providernumber: $pn2, hospitalname: $hn2, address1: $a12, city: $c2, state: $s2, zip: $z2, country: $co2, phone: $p2, hospitaltype: $ht2, hospitalowner: $ho2, emergencyservice: $es2, condition: $cn2, measurecode: $mc2, measurename: $mn2, score: $sc2, sample: $sa2, stateavg: $avg2),
//     $s1 == $s2, $mc1 == $mc2  -> $avg1 == $avg2.

//fd_3:phone number->city
b:  hospital(providernumber: $pn1, hospitalname: $hn1, address1: $a11, city: $c1, state: $s1, zip: $z1, country: $co1, phone: $p1, hospitaltype: $ht1, hospitalowner: $ho1, emergencyservice: $es1, condition: $cn1, measurecode: $mc1, measurename: $mn1, score: $sc1, sample: $sa1, stateavg: $avg1),
     hospital(providernumber: $pn2, hospitalname: $hn2, address1: $a12, city: $c2, state: $s2, zip: $z2, country: $co2, phone: $p2, hospitaltype: $ht2, hospitalowner: $ho2, emergencyservice: $es2, condition: $cn2, measurecode: $mc2, measurename: $mn2, score: $sc2, sample: $sa2, stateavg: $avg2),
     $p1 == $p2 -> $c1 == $c2.

//fd_0:zip code->city
a:  hospital(providernumber: $pn1, hospitalname: $hn1, address1: $a11, city: $c1, state: $s1, zip: $z1, country: $co1, phone: $p1, hospitaltype: $ht1, hospitalowner: $ho1, emergencyservice: $es1, condition: $cn1, measurecode: $mc1, measurename: $mn1, score: $sc1, sample: $sa1, stateavg: $avg1),
     hospital(providernumber: $pn2, hospitalname: $hn2, address1: $a12, city: $c2, state: $s2, zip: $z2, country: $co2, phone: $p2, hospitaltype: $ht2, hospitalowner: $ho2, emergencyservice: $es2, condition: $cn2, measurecode: $mc2, measurename: $mn2, score: $sc2, sample: $sa2, stateavg: $avg2),
     $z1 == $z2 -> $c1 == $c2 .

////fd_1:zip code->state
//e1:  hospital(providernumber: $pn1, hospitalname: $hn1, address1: $a11, city: $c1, state: $s1, zip: $z1, country: $co1, phone: $p1, hospitaltype: $ht1, hospitalowner: $ho1, emergencyservice: $es1, condition: $cn1, measurecode: $mc1, measurename: $mn1, score: $sc1, sample: $sa1, stateavg: $avg1),
//     hospital(providernumber: $pn2, hospitalname: $hn2, address1: $a12, city: $c2, state: $s2, zip: $z2, country: $co2, phone: $p2, hospitaltype: $ht2, hospitalowner: $ho2, emergencyservice: $es2, condition: $cn2, measurecode: $mc2, measurename: $mn2, score: $sc2, sample: $sa2, stateavg: $avg2),
//     $z1 == $z2 -> $s1 == $s2.
//
////fd_2:phone number->zip code
//e2:  hospital(providernumber: $pn1, hospitalname: $hn1, address1: $a11, city: $c1, state: $s1, zip: $z1, country: $co1, phone: $p1, hospitaltype: $ht1, hospitalowner: $ho1, emergencyservice: $es1, condition: $cn1, measurecode: $mc1, measurename: $mn1, score: $sc1, sample: $sa1, stateavg: $avg1),
//     hospital(providernumber: $pn2, hospitalname: $hn2, address1: $a12, city: $c2, state: $s2, zip: $z2, country: $co2, phone: $p2, hospitaltype: $ht2, hospitalowner: $ho2, emergencyservice: $es2, condition: $cn2, measurecode: $mc2, measurename: $mn2, score: $sc2, sample: $sa2, stateavg: $avg2),
//     $p1 == $p2 -> $z1 == $z2.
//
//
////fd_4:phone number->state
//e4:  hospital(providernumber: $pn1, hospitalname: $hn1, address1: $a11, city: $c1, state: $s1, zip: $z1, country: $co1, phone: $p1, hospitaltype: $ht1, hospitalowner: $ho1, emergencyservice: $es1, condition: $cn1, measurecode: $mc1, measurename: $mn1, score: $sc1, sample: $sa1, stateavg: $avg1),
//     hospital(providernumber: $pn2, hospitalname: $hn2, address1: $a12, city: $c2, state: $s2, zip: $z2, country: $co2, phone: $p2, hospitaltype: $ht2, hospitalowner: $ho2, emergencyservice: $es2, condition: $cn2, measurecode: $mc2, measurename: $mn2, score: $sc2, sample: $sa2, stateavg: $avg2),
//     $p1 == $p2 -> $s1 == $s2.
//
////fd_7:provider number,measure code->stateavg
//e7:  hospital(providernumber: $pn1, hospitalname: $hn1, address1: $a11, city: $c1, state: $s1, zip: $z1, country: $co1, phone: $p1, hospitaltype: $ht1, hospitalowner: $ho1, emergencyservice: $es1, condition: $cn1, measurecode: $mc1, measurename: $mn1, score: $sc1, sample: $sa1, stateavg: $avg1),
//     hospital(providernumber: $pn2, hospitalname: $hn2, address1: $a12, city: $c2, state: $s2, zip: $z2, country: $co2, phone: $p2, hospitaltype: $ht2, hospitalowner: $ho2, emergencyservice: $es2, condition: $cn2, measurecode: $mc2, measurename: $mn2, score: $sc2, sample: $sa2, stateavg: $avg2),
//     $pn1 == $pn2, $mc1 == $mc2 -> $avg1 == $avg2.

]]>
  </dependencies>
  <partialOrder>
    <type>Frequency</type>
  </partialOrder>
  <costManager>
    <type>Similarity</type>
    <similarityStrategy>SmithWaterman</similarityStrategy>
    <similarityThreshold>0.80</similarityThreshold>
    <chaseBranchingThreshold>5</chaseBranchingThreshold>
    <potentialSolutionsThreshold>5</potentialSolutionsThreshold>
    <doPermutations>false</doPermutations>
  </costManager>
  <configuration>
      <useCellGroupsForTGDs>true</useCellGroupsForTGDs>
  </configuration>
</scenario>
