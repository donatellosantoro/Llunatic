<?xml version="1.0" encoding="UTF-8"?>
<scenario>
    <source>    
        <type>GENERATE</type>
        <generate>
<![CDATA[
SCHEMA:
treatment(patient, rxid, hospital, npi)
physician(npi, name, email)
medprescription(rxid, patient, npi, doctor)
hospital(name, npi, doctor, email)
INSTANCE:
treatment(patient: "W. Smith", rxid: "P2", hospital: "PPTH", npi: "5555")
physician(npi: "5555", name: "G. House", email: "house@ppth.com")
medprescription(rxid: "P1", patient: "J. Doe", npi: "1222", doctor: "C. Taub")
medprescription(rxid: "P3", patient: "M. White", npi: "5556", doctor: "G. House")
hospital(name: "PPTH", npi: "5555", doctor: "G. House", email: "house@ppth.com")
]]>
        </generate>
    </source>
    <target>    
        <type>GENERATE</type>
        <generate>
<![CDATA[
SCHEMA:
prescription(rxid, patient, npiref)
doctor(npi, name, hospital, email)
INSTANCE:
//prescription(rxid: "", patient: "", npiref: "")
//doctor(npi: "", name: "", email: "", hospital: "")
prescription(rxid: "P1", patient: "J. Doe", npiref: "1112")
doctor(npi: "1112", name: "R. Chase", hospital: "Sacred Hearth", email: "chase@sh.com")
]]>
        </generate>
    </target>
    <dependencies>
<![CDATA[
STTGDs:
treatment(patient: $patient, rxid: $rxid, hospital: $hospital, npi: $npi), 
physician(npi: $npi, name: $docname, email: $email) ->
    prescription(rxid: $rxid, patient: $patient, npiref: $npi),
    doctor(npi: $npi, name: $docname, hospital: $hospital, email: $email).

medprescription(rxid: $rxid, patient: $pname, npi: $npi, doctor: $docname) ->
    prescription(rxid: $rxid, patient: $pname, npiref: $npi),
    doctor(npi: $npi, name: $docname, hospital: $N1, email: $N2).

ExtTGDs:
prescription(rxid: $rxid, patient: $name, npiref: $npi) ->
    doctor(npi: $npi, name: $N1, hospital: $N2, email: $N3).

ExtEGDs:
ep1: prescription(rxid: $rxid, patient: $name1, npiref: $npi1),
prescription(rxid: $rxid, patient: $name2, npiref: $npi2) -> $name1 == $name2.

ep2: prescription(rxid: $rxid, patient: $name1, npiref: $npi1),
prescription(rxid: $rxid, patient: $name2, npiref: $npi2) -> $npi1 == $npi2.

//ep2: prescription(rxid: $rxid, patient: $name1, npiref: $npi1),
//prescription(rxid: $rxid, patient: $name2, npiref: $npi2),
//doctor(npi: $npi1, name: $docname1, hospital: $hospital1, email: $email1),
//doctor(npi: $npi2, name: $docname2, hospital: $hospital2, email: $email2),
//prescription(rxid: $r1, patient: $n1, npiref: $npi1),
//prescription(rxid: $r2, patient: $n2, npiref: $npi2) -> $npi1 == $npi2.

ed1: doctor(npi: $npi, name: $docname1, hospital: $hospital1, email: $email1),
doctor(npi: $npi, name: $docname2, hospital: $hospital2, email: $email2) ->
  $docname1 == $docname2.

ed2: doctor(npi: $npi, name: $docname1, hospital: $hospital1, email: $email1),
doctor(npi: $npi, name: $docname2, hospital: $hospital2, email: $email2) ->
  $hospital1 == $hospital2.

ed3: doctor(npi: $npi, name: $docname1, hospital: $hospital1, email: $email1),
doctor(npi: $npi, name: $docname2, hospital: $hospital2, email: $email2) ->
  $email1 == $email2.

ed4: doctor(npi: $npi1, name: $docname, hospital: $hospital1, email: $email1),
doctor(npi: $npi2, name: $docname, hospital: $hospital2, email: $email2) ->
  $npi1 == $npi2.

//doctor(npi: $npi1, name: $docname, hospital: $hospital1, email: $email1),
//doctor(npi: $npi2, name: $docname, hospital: $hospital2, email: $email2),
//prescription(rxid: $rxid1, patient: $name1, npiref: $npi1),
//prescription(rxid: $rxid2, patient: $name2, npiref: $npi2)  ->
//  $npi1 == $npi2.

//doctor(npi: $npi1, name: $docname, hospital: $hospital1, email: $email1),
//doctor(npi: $npi2, name: $docname, hospital: $hospital2, email: $email2),
//prescription(rxid: $rxid1, patient: $name1, npiref: $npi1)
//and not exists(prescription(rxid: $rxid2, patient: $name2, npiref: $npi2))  ->
//  $npi1 == $npi2.

//doctor(npi: $npi1, name: $docname, hospital: $hospital1, email: $email1),
//doctor(npi: $npi2, name: $docname, hospital: $hospital2, email: $email2)
//and not exists(prescription(rxid: $rxid1, patient: $name1, npiref: $npi1))
//and not exists(prescription(rxid: $rxid2, patient: $name2, npiref: $npi2))  ->
//  $npi1 == $npi2.

md1: hospital(name: $hname, npi: $npi1, doctor: $dname, email: $email),
doctor(npi: $npi2, name: $dname, hospital: $hname, email: $email) ->
    $npi1 == $npi2.

//md1: hospital(name: $hname, npi: $npi1, doctor: $dname, email: $email),
//doctor(npi: $npi2, name: $dname, hospital: $hname, email: $email),
//prescription(rxid: $rxid1, patient: $name1, npiref: $npi2) ->
//    $npi1 == $npi2.
]]>
    </dependencies>
    <authoritativeSources>
        <source>hospital</source>
    </authoritativeSources>
    <partialOrder/>
    <costManager>
        <type>Standard</type>
        <leavesThreshold>50</leavesThreshold>
        <potentialSolutionsThreshold>50</potentialSolutionsThreshold>
        <!--        <leavesThreshold>20</leavesThreshold>
        <potentialSolutionsThreshold>10</potentialSolutionsThreshold>-->
        <noBackwardOnDependency>md1</noBackwardOnDependency>
    </costManager>
    <configuration/>
</scenario>