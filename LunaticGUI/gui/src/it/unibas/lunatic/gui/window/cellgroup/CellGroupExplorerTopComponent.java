package it.unibas.lunatic.gui.window.cellgroup;

import it.unibas.lunatic.gui.ExplorerTopComponent;
import it.unibas.lunatic.gui.R;
import it.unibas.lunatic.gui.node.cellgroup.filters.ICellGroupCategoryFilter;
import it.unibas.lunatic.gui.node.cellgroup.filters.ICellGroupValueFilter;
import it.unibas.lunatic.gui.window.cellgroup.filteractions.ShowAllCategories;
import it.unibas.lunatic.gui.window.cellgroup.filteractions.ShowAllValues;
import it.unibas.lunatic.gui.window.cellgroup.filteractions.ShowChangedOnly;
import it.unibas.lunatic.gui.window.cellgroup.filteractions.ShowLlunValueOnly;
import it.unibas.lunatic.gui.window.cellgroup.filteractions.ShowUnchangedOnly;
import it.unibas.lunatic.gui.window.utils.TopComponentListener;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.nodes.Node;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

@ConvertAsProperties(
        dtd = "-//it.unibas.lunatic.gui.window//CellGroupExplorer//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = R.Window.CELL_GROUP_EXPLORER,
        persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "navigator", openAtStartup = false)
@Messages({
    "CellGroups=Cell groups",
    "CTL_CellGroupExplorerTopComponent=Cell groups explorer",
    "HINT_CellGroupExplorerTopComponent=This is a CellGroupExplorer window"
})
public final class CellGroupExplorerTopComponent extends ExplorerTopComponent {

    public CellGroupExplorerTopComponent() {
        initComponents();
        setName(Bundle.CTL_CellGroupExplorerTopComponent());
        setToolTipText(Bundle.HINT_CellGroupExplorerTopComponent());
        associateExplorerLookup();
        view.setRootVisible(false);
        btnAllCat.setAction(new ShowAllCategories(this));
        btnAllValue.setAction(new ShowAllValues(this));
        btnChangedCat.setAction(new ShowChangedOnly(this));
        btnOthersCat.setAction(new ShowUnchangedOnly(this));
        btnLlunValue.setAction(new ShowLlunValueOnly(this));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        valueGroup = new javax.swing.ButtonGroup();
        categoryGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnAllValue = new javax.swing.JToggleButton();
        btnLlunValue = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnChangedCat = new javax.swing.JToggleButton();
        btnAllCat = new javax.swing.JToggleButton();
        btnOthersCat = new javax.swing.JToggleButton();
        view = new org.openide.explorer.view.BeanTreeView();

        setLayout(new java.awt.BorderLayout());

        valueGroup.add(btnAllValue);
        btnAllValue.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(btnAllValue, org.openide.util.NbBundle.getMessage(CellGroupExplorerTopComponent.class, "CellGroupExplorerTopComponent.btnAllValue.text")); // NOI18N
        btnAllValue.setPreferredSize(new java.awt.Dimension(24, 24));

        valueGroup.add(btnLlunValue);
        org.openide.awt.Mnemonics.setLocalizedText(btnLlunValue, org.openide.util.NbBundle.getMessage(CellGroupExplorerTopComponent.class, "CellGroupExplorerTopComponent.btnLlunValue.text")); // NOI18N
        btnLlunValue.setPreferredSize(new java.awt.Dimension(24, 24));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CellGroupExplorerTopComponent.class, "CellGroupExplorerTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CellGroupExplorerTopComponent.class, "CellGroupExplorerTopComponent.jLabel2.text")); // NOI18N

        categoryGroup.add(btnChangedCat);
        org.openide.awt.Mnemonics.setLocalizedText(btnChangedCat, org.openide.util.NbBundle.getMessage(CellGroupExplorerTopComponent.class, "CellGroupExplorerTopComponent.btnChangedCat.text")); // NOI18N
        btnChangedCat.setPreferredSize(new java.awt.Dimension(24, 24));

        categoryGroup.add(btnAllCat);
        btnAllCat.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(btnAllCat, org.openide.util.NbBundle.getMessage(CellGroupExplorerTopComponent.class, "CellGroupExplorerTopComponent.btnAllCat.text")); // NOI18N
        btnAllCat.setPreferredSize(new java.awt.Dimension(24, 24));

        categoryGroup.add(btnOthersCat);
        org.openide.awt.Mnemonics.setLocalizedText(btnOthersCat, org.openide.util.NbBundle.getMessage(CellGroupExplorerTopComponent.class, "CellGroupExplorerTopComponent.btnOthersCat.text")); // NOI18N
        btnOthersCat.setPreferredSize(new java.awt.Dimension(24, 24));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAllValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnLlunValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAllCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnChangedCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnOthersCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLlunValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAllValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChangedCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAllCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOthersCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_END);
        add(view, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAllCat;
    private javax.swing.JToggleButton btnAllValue;
    private javax.swing.JToggleButton btnChangedCat;
    private javax.swing.JToggleButton btnLlunValue;
    private javax.swing.JToggleButton btnOthersCat;
    private javax.swing.ButtonGroup categoryGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.ButtonGroup valueGroup;
    private org.openide.explorer.view.BeanTreeView view;
    // End of variables declaration//GEN-END:variables
    private StepCellGroupSelectionListener mySelectionListener = new StepCellGroupSelectionListener();
    private TopComponentListener windowCloseListener = new TopComponentListener();
    private BindSelectedChaseStepGroups cellGroupLoader = new BindSelectedChaseStepGroups();

    @Override
    public void componentOpened() {
        cellGroupLoader.register(this);
        mySelectionListener.register();
//        windowCloseListener.register(this, R.Window.MC_CHASE_RESULT);
//        windowCloseListener.register(this, R.Window.MC_CHASE_RESULT_RANKED_SOLUTIONS);
    }

    @Override
    public void componentClosed() {
        cellGroupLoader.remove();
        mySelectionListener.register();
        windowCloseListener.remove();
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.4");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void setRootContext(Node node) {
        explorer.setRootContext(node);
    }

    @Override
    public void removeRootContext() {
        explorer.setRootContext(Node.EMPTY);
    }

    public void setCategoryFilter(ICellGroupCategoryFilter categoryFilter) {
        cellGroupLoader.setCategoryFilter(categoryFilter);
    }

    public void setValueFilter(ICellGroupValueFilter valueFilter) {
        cellGroupLoader.setValueFilter(valueFilter);
    }

    public void filter() {
        cellGroupLoader.filter();
    }
}
