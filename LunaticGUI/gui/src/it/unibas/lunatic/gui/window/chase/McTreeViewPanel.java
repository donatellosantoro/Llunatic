package it.unibas.lunatic.gui.window.chase;

import it.unibas.lunatic.gui.model.LoadedScenario;
import it.unibas.lunatic.gui.model.McChaseResult;
import it.unibas.lunatic.gui.node.chase.mc.ChaseTreeRoot;
import it.unibas.lunatic.gui.window.ScenarioChangeListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JPanel;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.openide.explorer.ExplorerManager;

/**
 *
 * @author Tony
 */
public class McTreeViewPanel extends JPanel implements McResultView{

    private Log logger = LogFactory.getLog(getClass());
    private List<String[]> expandedPaths = new ArrayList<String[]>();
    private McChaseResult result;
    private ExplorerManager explorerManager;

    public McTreeViewPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statefulView = new it.unibas.lunatic.gui.window.utils.StatefulView();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
        add(statefulView);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private it.unibas.lunatic.gui.window.utils.StatefulView statefulView;
    // End of variables declaration//GEN-END:variables
    private McResultUpdateListener listener = new McResultUpdateListener();

    @Override
    public void componentOpened() {
        listener.register(this);
        if (result != null) {
            ChaseTreeRoot resultNode = result.getNode();
            explorerManager = ExplorerManager.find(this);
            statefulView.setRootNode(explorerManager, resultNode, expandedPaths);
        }
    }

    @Override
    public void componentClosed() {
        this.expandedPaths = statefulView.getExpandedPaths();
        listener.remove();
    }

    @Override
    public void onChaseResultUpdate(McChaseResult result) {
        this.result = result;
        ChaseTreeRoot resultNode = result.getNode();
        explorerManager = ExplorerManager.find(this);
        statefulView.setRootNode(explorerManager, resultNode);
    }

    @Override
    public void onChaseResultClose() {
//        result = null;
//        expandedPaths = new ArrayList<String[]>();
    }

    @Override
    public JComponent toComponent() {
        return this;
    }

    @Override
    public void addNotify() {
        super.addNotify();
        this.explorerManager = ExplorerManager.find(this);
    }
}
