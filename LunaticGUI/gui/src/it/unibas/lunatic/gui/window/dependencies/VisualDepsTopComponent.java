package it.unibas.lunatic.gui.window.dependencies;

import it.unibas.lunatic.gui.R;
import it.unibas.lunatic.gui.model.LoadedScenario;
import it.unibas.lunatic.gui.window.utils.TopComponentListener;
import it.unibas.lunatic.gui.visualdeps.SceneUtils;
import it.unibas.lunatic.gui.window.ScenarioChangeListener;
import java.awt.Color;
import javax.swing.JComponent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.api.visual.vmd.VMDGraphScene;
import org.openide.awt.ActionID;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//it.unibas.lunatic.gui.window//VisualDeps//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = R.Window.VISUAL_DEPENDENCIES,
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editorBottom", openAtStartup = false)
@ActionID(category = "Window", id = R.ActionId.SHOW_DEP_VISUAL)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_VisualDepsAction",
        preferredID = R.Window.VISUAL_DEPENDENCIES)
@Messages({
    "CTL_VisualDepsAction=Visualize",
    "CTL_VisualDepsTopComponent=Dependency graph",})
public final class VisualDepsTopComponent extends TopComponent implements ScenarioChangeListener.Target {

    private JComponent emptyScene = new VMDGraphScene().createView();
    private Color premiseBorderColor = SceneUtils.PREMISE_COLOR;
    private Color conclusionBorderColor = SceneUtils.CONCLUSION_COLOR;

    public VisualDepsTopComponent() {
        initComponents();
        setDisplayName(Bundle.CTL_VisualDepsTopComponent());
        setToolTipText(Bundle.CTL_VisualDepsTopComponent());
        splitPane.setTopComponent(legendPanel);
        setEmptyScene();
        premiseSquare.setBackground(premiseBorderColor);
        conclusionSquare.setBackground(conclusionBorderColor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        legendPanel = new javax.swing.JPanel();
        legendRectangle = new javax.swing.JPanel();
        premiseLabel = new javax.swing.JLabel();
        conclusionLabel = new javax.swing.JLabel();
        premiseSquare = new javax.swing.JPanel();
        conclusionSquare = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        depTextArea = new javax.swing.JTextArea();
        splitPane = new javax.swing.JSplitPane();
        scenePane = new javax.swing.JScrollPane();

        legendRectangle.setBackground(new java.awt.Color(255, 255, 255));
        legendRectangle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        legendRectangle.setToolTipText(org.openide.util.NbBundle.getMessage(VisualDepsTopComponent.class, "VisualDepsTopComponent.legendRectangle.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(premiseLabel, org.openide.util.NbBundle.getMessage(VisualDepsTopComponent.class, "VisualDepsTopComponent.premiseLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(conclusionLabel, org.openide.util.NbBundle.getMessage(VisualDepsTopComponent.class, "VisualDepsTopComponent.conclusionLabel.text")); // NOI18N

        premiseSquare.setBackground(new java.awt.Color(0, 0, 0));
        premiseSquare.setMaximumSize(new java.awt.Dimension(16, 16));
        premiseSquare.setMinimumSize(new java.awt.Dimension(16, 16));
        premiseSquare.setPreferredSize(new java.awt.Dimension(16, 16));
        premiseSquare.setLayout(new javax.swing.BoxLayout(premiseSquare, javax.swing.BoxLayout.LINE_AXIS));

        conclusionSquare.setBackground(new java.awt.Color(255, 0, 0));
        conclusionSquare.setForeground(new java.awt.Color(255, 0, 0));
        conclusionSquare.setFocusable(false);
        conclusionSquare.setMaximumSize(new java.awt.Dimension(16, 16));
        conclusionSquare.setMinimumSize(new java.awt.Dimension(16, 16));
        conclusionSquare.setPreferredSize(new java.awt.Dimension(16, 16));
        conclusionSquare.setLayout(new javax.swing.BoxLayout(conclusionSquare, javax.swing.BoxLayout.LINE_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(VisualDepsTopComponent.class, "VisualDepsTopComponent.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout legendRectangleLayout = new javax.swing.GroupLayout(legendRectangle);
        legendRectangle.setLayout(legendRectangleLayout);
        legendRectangleLayout.setHorizontalGroup(
            legendRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(legendRectangleLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(legendRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(legendRectangleLayout.createSequentialGroup()
                        .addGroup(legendRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(premiseSquare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(conclusionSquare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(legendRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(conclusionLabel)
                            .addComponent(premiseLabel))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        legendRectangleLayout.setVerticalGroup(
            legendRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, legendRectangleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(legendRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(premiseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(premiseSquare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(legendRectangleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(conclusionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(conclusionSquare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        depTextArea.setEditable(false);
        depTextArea.setColumns(20);
        depTextArea.setLineWrap(true);
        depTextArea.setRows(4);
        depTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(depTextArea);

        javax.swing.GroupLayout legendPanelLayout = new javax.swing.GroupLayout(legendPanel);
        legendPanel.setLayout(legendPanelLayout);
        legendPanelLayout.setHorizontalGroup(
            legendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(legendPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(legendRectangle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );
        legendPanelLayout.setVerticalGroup(
            legendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(legendPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(legendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(legendRectangle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        splitPane.setBottomComponent(scenePane);

        add(splitPane);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel conclusionLabel;
    private javax.swing.JPanel conclusionSquare;
    private javax.swing.JTextArea depTextArea;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel legendPanel;
    private javax.swing.JPanel legendRectangle;
    private javax.swing.JLabel premiseLabel;
    private javax.swing.JPanel premiseSquare;
    private javax.swing.JScrollPane scenePane;
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables
    private DependencySceneBinder sceneGenerator = new DependencySceneBinder();
    private TopComponentListener masterWindowListener = new TopComponentListener();
    private ScenarioChangeListener scenarioChangeListener = new ScenarioChangeListener();

    @Override
    public void componentOpened() {
        if (getScenePane().getViewport().equals(emptyScene)) {
            this.close();
            return;
        }
        sceneGenerator.register(this);
        masterWindowListener.register(this, R.Window.DEPENDENCIES);
        scenarioChangeListener.register(this);
    }

    @Override
    public void componentClosed() {
        sceneGenerator.remove();
        masterWindowListener.remove();
        scenarioChangeListener.remove();
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.3");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public JScrollPane getScenePane() {
        return scenePane;
    }

    public JTextArea getDepTextArea() {
        return depTextArea;
    }

    public void setEmptyScene() {
        scenePane.setViewportView(emptyScene);
    }

    @Override
    public void onScenarioChange(LoadedScenario oldScenario, LoadedScenario newScenario) {
        close();
    }

    @Override
    public void onScenarioClose(LoadedScenario scenario) {
        close();
    }
}
